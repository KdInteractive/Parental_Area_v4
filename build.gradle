buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
    }
}

allprojects {
    repositories {
        mavenCentral()
        maven {
            url "https://jitpack.io"
        }
    }
}

apply plugin: 'com.android.application'

// Top-level build file where you can add configuration options common to all sub-projects/modules.
ext.compileSdkVersion = 21
ext.buildToolsVersion = "21.1.2"
ext.versionName = file("./getVersionName.sh").toString().execute().text.trim()
ext.versionCode = file("./getVersionCode.sh").toString().execute().text.trim().toInteger()
ext.minSdkVersion = 19
ext.targetSdkVersion = 21
ext.licensed = file("./getBuilding.sh").toString().execute().text.trim()

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        versionName rootProject.versionName
        versionCode rootProject.versionCode
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
    }

    signingConfigs {
        release {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('../keystore/platform.jks')
            storePassword 'android'
        }
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('../keystore/platform.jks')
            storePassword 'android'
        }
    }
    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
        debug {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    productFlavors {
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            if (variant.buildType.name.equals("release")) {
                def apk = output.outputFile;
                def newName;

                newName = apk.name.replace(".apk", "-" + rootProject.licensed + "-v" + defaultConfig.versionCode + ".apk");

                output.outputFile = new File(apk.parentFile, newName);
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.github.User:Repo:Tag'
}
